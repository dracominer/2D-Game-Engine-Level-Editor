#version 330

in vec2 pass_TextureCoords;

out vec4 out_Color;

uniform vec3 color;
uniform sampler2D fontAtlas;

uniform float width;
uniform float edge;
uniform float borderWidth;
uniform float borderEdge;
uniform vec3 borderColor;
uniform vec2 borderOffset;

float smoothlyStep(float edge0, float edge1, float x){
    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
    return t * t * (3.0 - 2.0 * t);
}

void main(void){
	float distance = 1.0 - texture(fontAtlas, pass_TextureCoords).a;
	float alpha = 1.0 - smoothlyStep(width, width + edge, distance);

	float distance_border = 1.0 - texture(fontAtlas, pass_TextureCoords + borderOffset).a;
	float alpha_border = 1.0 - smoothlyStep(borderWidth, borderWidth + borderEdge, distance_border);
	
	float totalAlpha = alpha + (1.0 - alpha) * alpha_border;
	
	vec3 totalColor = mix(borderColor, color, alpha / totalAlpha);
	
	out_Color = vec4(totalColor, totalAlpha);

}