#version 140

in vec2 textureCoords[9];

out vec4 out_Color;

uniform sampler2D colourTexture;

void main(void){
	vec4 sample[9];
	for(int i=0; i < 9; i++){
		sample[i] = texture(colourTexture, textureCoords[i]);
	}
	vec4 horizEdge = sample[2] + (2.0*sample[5]) + sample[8] - (sample[0] + (2.0*sample[3]) + sample[6]);
    vec4 vertEdge = sample[0] + (2.0*sample[1]) + sample[2] - (sample[6] + (2.0*sample[7]) + sample[8]);
    out_Color.rgb = sqrt((horizEdge.rgb * horizEdge.rgb) + (vertEdge.rgb * vertEdge.rgb));
    float avg = (out_Color.r+out_Color.g+out_Color.b)/3.0;
    out_Color.a = 1.0;
    out_Color = vec4(1.0-avg, 1.0-avg, 1.0-avg, 1.0);//makes it greyscale
    if(avg < 0.8){
	    out_Color = sample[4];
    }    
}